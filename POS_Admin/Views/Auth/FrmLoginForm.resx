<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>